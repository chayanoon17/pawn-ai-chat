"use client";

import { Mail, Lock, Loader2, AlertCircle } from "lucide-react";
import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { useAuth } from "@/context/auth-context";

export default function LoginPage() {
  // üé£ ‡πÉ‡∏ä‡πâ Auth Context
  const { login, isAuthenticated, isLoading } = useAuth();
  const router = useRouter();

  // üìù Form State
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [error, setError] = useState("");

  // üîÑ Redirect ‡∏ñ‡πâ‡∏≤ login ‡πÅ‡∏•‡πâ‡∏ß
  useEffect(() => {
    if (isAuthenticated) {
      router.push("/dashboard");
    }
  }, [isAuthenticated, router]);

  /**
   * Handle Login Form Submit
   */
  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();

    // Clear previous error
    setError("");

    // Validation
    if (!email || !password) {
      setError("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô");
      return;
    }

    try {
      setIsSubmitting(true);

      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å login function ‡∏à‡∏≤‡∏Å Auth Context
      await login(email, password);

      // ‡∏´‡∏•‡∏±‡∏á login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏à‡∏∞ redirect ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô useEffect
      console.log("üéâ Login successful!");
    } catch (error) {
      // ‡πÅ‡∏™‡∏î‡∏á error message
      const errorMessage =
        error instanceof Error ? error.message : "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
      setError(errorMessage);
      console.error("‚ùå Login failed:", error);
    } finally {
      setIsSubmitting(false);
    }
  };

  // üîÑ ‡πÅ‡∏™‡∏î‡∏á Loading ‡∏´‡∏£‡∏∑‡∏≠ Checking Auth Status
  if (isLoading) {
    return (
      <div className="flex min-h-screen items-center justify-center">
        <div className="flex flex-col items-center space-y-4">
          <Loader2 className="h-8 w-8 animate-spin text-blue-600" />
          <p className="text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="flex min-h-screen">
      {/* Left Panel - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö */}
      <div className="hidden md:flex w-1/2 bg-gradient-to-b from-blue-500 to-blue-800 flex-col justify-center items-center text-white p-8">
        <div className="flex flex-col items-center space-y-4">
          <div className="w-32 h-32 bg-white rounded-full flex items-center justify-center">
            <span className="text-4xl">üèõÔ∏è</span>
          </div>
          <h1 className="text-3xl font-bold text-center">
            Pawn Shop Management
          </h1>
          <p className="text-lg text-center opacity-90">‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏≥‡∏ô‡∏≥</p>
          <div className="text-sm text-center opacity-75">
            <p>üîê ‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏î‡πâ‡∏ß‡∏¢ httpOnly Cookies</p>
            <p>üõ°Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á</p>
          </div>
        </div>
      </div>

      {/* Right Panel - Login Form */}
      <div className="flex flex-col justify-center items-center w-full md:w-1/2 px-8">
        <div className="w-full max-w-md space-y-6">
          {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ */}
          <div className="text-center">
            <h2 className="text-3xl font-bold text-gray-900">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>
            <p className="text-gray-600 mt-2">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</p>
          </div>

          {/* Error Message */}
          {error && (
            <div className="bg-red-50 border border-red-200 rounded-md p-4 flex items-center space-x-2">
              <AlertCircle className="h-5 w-5 text-red-500" />
              <p className="text-red-700 text-sm">{error}</p>
            </div>
          )}

          {/* Login Form */}
          <form onSubmit={handleLogin} className="space-y-4">
            {/* Email Input */}
            <div>
              <label
                htmlFor="email"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                ‡∏≠‡∏µ‡πÄ‡∏°‡∏•
              </label>
              <div className="relative">
                <Mail className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
                <input
                  id="email"
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                  placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•"
                  disabled={isSubmitting}
                />
              </div>
            </div>

            {/* Password Input */}
            <div>
              <label
                htmlFor="password"
                className="block text-sm font-medium text-gray-700 mb-1"
              >
                ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
              </label>
              <div className="relative">
                <Lock className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
                <input
                  id="password"
                  type="password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                  placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                  disabled={isSubmitting}
                />
              </div>
            </div>

            {/* Submit Button */}
            <button
              type="submit"
              disabled={isSubmitting}
              className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium py-3 px-4 rounded-md transition-colors flex items-center justify-center space-x-2"
            >
              {isSubmitting ? (
                <>
                  <Loader2 className="h-5 w-5 animate-spin" />
                  <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...</span>
                </>
              ) : (
                <span>‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</span>
              )}
            </button>
          </form>

          {/* Development Info */}
          {process.env.NEXT_PUBLIC_DEBUG_AUTH === "true" && (
            <div className="bg-yellow-50 border border-yellow-200 rounded-md p-4">
              <h4 className="font-medium text-yellow-800 mb-2">
                üõ†Ô∏è Development Mode
              </h4>
              <div className="text-sm text-yellow-700 space-y-1">
                <p>
                  <strong>API URL:</strong> {process.env.NEXT_PUBLIC_API_URL}
                </p>
                <p>
                  <strong>Test Account:</strong> admin@pawnshop.com /
                  admin123456
                </p>
                <p>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Console ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug logs</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
