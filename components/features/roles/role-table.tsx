"use client";

import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import {
  Plus,
  Search,
  Edit,
  Trash2,
  Eye,
  FileText,
  Briefcase,
  LayoutGrid,
  KeyRound,
  Users,
} from "lucide-react";
import { deleteRole } from "@/lib/api-service";
import {
  showDeleteConfirmation,
  showDeleteSuccess,
  showError,
} from "@/lib/sweetalert";
import type { Role, Permission, MenuPermission } from "@/types/role";

interface RoleTableProps {
  roles: Role[];
  availablePermissions: Permission[];
  availableMenuPermissions: MenuPermission[];
  searchTerm: string;
  onSearchChange: (term: string) => void;
  onCreateRole: () => void;
  onEditRole: (role: Role) => void;
  onRoleDeleted: (roleId: number) => void;
}

export function RoleTable({
  roles,
  availablePermissions,
  availableMenuPermissions,
  searchTerm,
  onSearchChange,
  onCreateRole,
  onEditRole,
  onRoleDeleted,
}: RoleTableProps) {
  const [isViewDialogOpen, setIsViewDialogOpen] = useState(false);
  const [selectedRole, setSelectedRole] = useState<Role | null>(null);

  // Filter roles based on search term
  const filteredRoles = roles.filter(
    (role) =>
      role.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      role.description.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // Handle delete role
  const handleDeleteRole = async (roleId: number, roleName: string) => {
    const result = await showDeleteConfirmation(
      "‡∏•‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ?",
      `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á "${roleName}"?`,
      "‡πÉ‡∏ä‡πà, ‡∏•‡∏ö‡πÄ‡∏•‡∏¢!",
      "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"
    );

    if (result.isConfirmed) {
      try {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏•‡∏ö role
        await deleteRole(roleId);

        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å callback function
        onRoleDeleted(roleId);

        showDeleteSuccess(
          "‡∏•‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
          `‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á "${roleName}" ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`
        );
      } catch (error) {
        console.error("Error deleting role:", error);
        showError(
          "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
          "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
        );
      }
    }
  };

  return (
    <>
      {/* üìä Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
        {/* Card 1: ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
        <div className="bg-white border border-slate-100 p-4 rounded-lg shadow-sm">
          <div className="flex items-center space-x-3 mb-2">
            <div className="p-2 bg-blue-100 rounded-full">
              <Briefcase className="h-5 w-5 text-blue-600" />
            </div>
            <div className="flex-1">
              <p className="text-sm font-medium text-slate-500 uppercase tracking-wide">
                ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </p>
              <div className="text-xl font-semibold text-slate-800">
                {roles.length}
              </div>
            </div>
          </div>
          <p className="text-sm text-slate-500">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà</p>
        </div>

        {/* Card 2: ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
        <div className="bg-white border border-slate-100 p-4 rounded-lg shadow-sm">
          <div className="flex items-center space-x-3 mb-2">
            <div className="p-2 bg-green-100 rounded-full">
              <Users className="h-5 w-5 text-green-600" />
            </div>
            <div className="flex-1">
              <p className="text-sm font-medium text-slate-500 uppercase tracking-wide">
                ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
              </p>
              <div className="text-xl font-semibold text-slate-800">
                {roles.reduce((sum, role) => sum + role.userCount, 0)}
              </div>
            </div>
          </div>
          <p className="text-sm text-slate-500">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</p>
        </div>

        {/* Card 3: ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π */}
        <div className="bg-white border border-slate-100 p-4 rounded-lg shadow-sm">
          <div className="flex items-center space-x-3 mb-2">
            <div className="p-2 bg-indigo-100 rounded-full">
              <LayoutGrid className="h-5 w-5 text-indigo-600" />
            </div>
            <div className="flex-1">
              <p className="text-sm font-medium text-slate-500 uppercase tracking-wide">
                ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏°‡∏ô‡∏π
              </p>
              <div className="text-xl font-semibold text-slate-800">
                {availableMenuPermissions.length}
              </div>
            </div>
          </div>
          <p className="text-sm text-slate-500">
            ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
          </p>
        </div>

        {/* Card 4: ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ */}
        <div className="bg-white border border-slate-100 p-4 rounded-lg shadow-sm">
          <div className="flex items-center space-x-3 mb-2">
            <div className="p-2 bg-amber-100 rounded-full">
              <KeyRound className="h-5 w-5 text-amber-600" />
            </div>
            <div className="flex-1">
              <p className="text-sm font-medium text-slate-500 uppercase tracking-wide">
                ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
              </p>
              <div className="text-xl font-semibold text-slate-800">
                {availablePermissions.length}
              </div>
            </div>
          </div>
          <p className="text-sm text-slate-500">‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</p>
        </div>
      </div>

      {/* üîç Search and Filter Section */}
      <Card className="bg-white border border-slate-200 shadow-sm">
        {/* üìä Header Section */}
        <CardHeader className="px-6 border-b border-gray-100">
          <div className="flex flex-col lg:flex-row lg:items-start justify-between space-y-4 lg:space-y-0">
            <div className="flex items-center space-x-3">
              <div className="p-3 bg-slate-100 rounded-lg">
                <Briefcase className="w-5 h-5 text-slate-600" />
              </div>
              <div className="flex-1">
                <CardTitle className="text-lg font-semibold text-slate-80">
                  ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                </CardTitle>
                <span className="text-sm text-slate-500">
                  ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
                </span>
              </div>
            </div>
            {/* Create Role Button */}
            <Button
              onClick={onCreateRole}
              className="bg-[#308AC7] hover:bg-[#3F99D8] text-white border-slate-200 shadow-sm"
            >
              <Plus className="w-4 h-4 mr-2" />
              ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
            </Button>
          </div>
        </CardHeader>

        <CardContent>
          <div className="flex items-center space-x-2 mb-6">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 h-4 w-4" />
              <Input
                placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á..."
                value={searchTerm}
                onChange={(e) => onSearchChange(e.target.value)}
                className="pl-10 border-slate-200 focus:ring-2 focus:ring-slate-500 focus:border-slate-500"
              />
            </div>
          </div>

          {/* üìã Roles Table */}
          <div className="rounded-lg border border-slate-200 overflow-hidden">
            <Table>
              <TableHeader className="bg-slate-50">
                <TableRow>
                  <TableHead className="font-semibold text-slate-700">
                    ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                  </TableHead>
                  <TableHead className="font-semibold text-slate-700">
                    ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
                  </TableHead>
                  <TableHead className="font-semibold text-slate-700">
                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                  </TableHead>
                  <TableHead className="font-semibold text-slate-700">
                    ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                  </TableHead>
                  <TableHead className="font-semibold text-slate-700 text-center">
                    ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
                  </TableHead>
                </TableRow>
              </TableHeader>
              <TableBody className="divide-y divide-slate-100">
                {filteredRoles.length === 0 ? (
                  <TableRow>
                    <TableCell
                      colSpan={7} // ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                      className="text-center py-8 text-slate-500"
                    >
                      ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                    </TableCell>
                  </TableRow>
                ) : (
                  filteredRoles.map((role) => (
                    <TableRow key={role.id} className="hover:bg-slate-50">
                      <TableCell className="font-medium text-slate-800">
                        {role.name}
                      </TableCell>
                      <TableCell className="text-slate-600 max-w-md truncate">
                        {role.description}
                      </TableCell>
                      <TableCell>
                        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-slate-100 text-slate-700">
                          {role.userCount} ‡∏Ñ‡∏ô
                        </span>
                      </TableCell>
                      <TableCell className="text-slate-600 text-sm">
                        {new Date(role.updatedAt).toLocaleDateString("th-TH")}
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center justify-center space-x-1">
                          <Button
                            variant="ghost"
                            size="sm"
                            onClick={() => {
                              setSelectedRole(role);
                              setIsViewDialogOpen(true);
                            }}
                            className="text-blue-600 hover:text-blue-800 hover:bg-slate-100"
                          >
                            <Eye className="w-4 h-4" />
                          </Button>
                          <Button
                            variant="ghost"
                            size="sm"
                            onClick={() => onEditRole(role)}
                            className="text-slate-600 hover:text-slate-800 hover:bg-slate-100"
                          >
                            <Edit className="w-4 h-4" />
                          </Button>
                          <Button
                            variant="ghost"
                            size="sm"
                            onClick={() => handleDeleteRole(role.id, role.name)}
                            className="text-red-600 hover:text-red-800 hover:bg-red-50"
                          >
                            <Trash2 className="w-4 h-4" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  ))
                )}
              </TableBody>
            </Table>
          </div>
        </CardContent>
      </Card>

      {/* üëÅÔ∏è View Role Dialog */}
      <Dialog open={isViewDialogOpen} onOpenChange={setIsViewDialogOpen}>
        <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto">
          <DialogHeader>
            <DialogTitle className="flex items-center space-x-2">
              <Briefcase className="w-5 h-5 text-slate-600" />
              <span>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: {selectedRole?.name}</span>
            </DialogTitle>
            <DialogDescription className="text-slate-500">
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏µ‡πâ
            </DialogDescription>
          </DialogHeader>

          {selectedRole && (
            <div className="space-y-4">
              {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */}
              <div className="bg-slate-50 border border-slate-200 p-4 rounded-lg">
                <h3 className="font-medium text-slate-700 mb-3 flex items-center space-x-2">
                  <FileText className="w-4 h-4 text-slate-500" />
                  <span>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô</span>
                </h3>
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <label className="text-xs font-medium text-slate-500 uppercase tracking-wide">
                      ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                    </label>
                    <p className="text-sm text-slate-800 mt-1 font-medium">
                      {selectedRole.name}
                    </p>
                  </div>
                  <div>
                    <label className="text-xs font-medium text-slate-500 uppercase tracking-wide">
                      ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
                    </label>
                    <p className="text-sm text-slate-800 mt-1">
                      {selectedRole.userCount} ‡∏Ñ‡∏ô
                    </p>
                  </div>
                  <div className="col-span-2">
                    <label className="text-xs font-medium text-slate-500 uppercase tracking-wide">
                      ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
                    </label>
                    <p className="text-sm text-slate-800 mt-1">
                      {selectedRole.description}
                    </p>
                  </div>
                </div>
              </div>

              {/* ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π */}
              <div className="bg-slate-50 border border-slate-200 p-4 rounded-lg">
                <h3 className="font-medium text-slate-700 mb-3 flex items-center space-x-2">
                  <LayoutGrid className="w-4 h-4 text-slate-500" />
                  <span>‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π</span>
                </h3>
                <div className="space-y-2">
                  {selectedRole.menuPermissions.length > 0 ? (
                    selectedRole.menuPermissions.map((menuPermission) => (
                      <div
                        key={menuPermission.id}
                        className="flex items-center space-x-2"
                      >
                        <span className="inline-flex items-center px-2 py-1 border border-green-500 rounded-full text-xs font-medium bg-green-100 text-green-700">
                          {menuPermission.name}
                        </span>
                      </div>
                    ))
                  ) : (
                    <p className="text-sm text-slate-500">
                      ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π
                    </p>
                  )}
                </div>
              </div>

              {/* ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô */}
              <div className="bg-slate-50 border border-slate-200 p-4 rounded-lg">
                <h3 className="font-medium text-slate-700 mb-3 flex items-center space-x-2">
                  <KeyRound className="w-4 h-4 text-slate-500" />
                  <span>‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</span>
                </h3>
                <div className="space-y-2">
                  {selectedRole.permissions.length > 0 ? (
                    selectedRole.permissions.map((permission) => (
                      <div
                        key={permission.id}
                        className="flex items-center space-x-2"
                      >
                        <span className="inline-flex items-center px-2 py-1 border border-slate-400 rounded-full text-xs font-medium bg-slate-100 text-slate-700">
                          {permission.name}
                        </span>
                      </div>
                    ))
                  ) : (
                    <p className="text-sm text-slate-500">
                      ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                    </p>
                  )}
                </div>
              </div>
            </div>
          )}
        </DialogContent>
      </Dialog>
    </>
  );
}
